package edu.northeastern.ccs.im;

import static org.junit.jupiter.api.Assertions.assertTrue;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

/**
 * Class to test ScanNetNB
 * 
 * @author Nipun
 * @version 1.0
 */
class ScanNetNBTest {
	private static PrattleRunabale server;
	private String hostName = "127.0.0.1";
	private int port= 4545;
	@BeforeAll
	public static void setUp() {
		server = new PrattleRunabale();
		server.start();
	}

	@AfterAll
	public static void stopServer() {
		server.terminate();
	}

	/*
	 * Test to check failure message
	 */
	@Test
	void hasNextMessageFailTest() throws IOException {

		SocketNB socketNB = new SocketNB("127.0.0.1", 4545);
		ScanNetNB scanNetNB = new ScanNetNB(socketNB);
		assertTrue(!scanNetNB.hasNextMessage());
	}

	@Test
	void hasNextPass() throws IOException {
		SocketNB socketNB = new SocketNB("127.0.0.1", 4545);
		ScanNetNB scanNetNB = new ScanNetNB(socketNB);
		// Creating a Message
		Message msg = Message.makeBroadcastMessage("TestUser", "Hey");
		String str = msg.toString();
		ByteBuffer wrapper = ByteBuffer.wrap(str.getBytes());
		int bytesWritten = 0;

		SocketChannel channel = SocketChannel.open();
		// Make this channel a non-blocking channel
		channel.configureBlocking(false);
		// Connect the channel to the remote port
		channel.connect(new InetSocketAddress(hostName, port));

		while (bytesWritten != str.length()) {
			bytesWritten += channel.write(wrapper);
		}
		assertTrue(socketNB.getSocket().isConnected());
	}

}
